---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      # Use the service account configured for IRSA or Pod Identity to access AWS resources
      serviceAccountName: default  # update if you have a custom SA with Pod Identity association
      imagePullSecrets:
        - name: dockerhub-secret  # DockerHub image pull secret
      containers:
        - name: my-app
          image: auwalu5/tshoot:1.0
          ports:
            - containerPort: 80
          volumeMounts:
            - name: secrets-store-inline
              mountPath: /tmp
              readOnly: true  # Mount secrets from AWS Secrets Manager as read-only
      volumes:
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "supabase-db-secrets"  # Reference to SecretProviderClass for AWS Secrets Manager

---
apiVersion: v1
kind: Service
metadata:
  name: my-app-service
  namespace: default
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "alb"  # Use AWS Load Balancer Controller to provision an ALB
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"  # Make the ALB public
spec:
  type: LoadBalancer
  selector:
    app: my-app
  ports:
    - port: 80
      targetPort: 80

